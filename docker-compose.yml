version: '3'

services:

  nginx:
    container_name: nginx-m2
    image: nginx:1.25.3
    hostname: docker-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - var_www:${DIST_VAR_WWW}
      - ./volumes/etc/nginx/conf.d:/etc/nginx/conf.d:cached
      - ./volumes/etc/ssl:/etc/ssl/docker:cached
      - ./volumes/var/log/nginx:/var/log/nginx:delegated
    restart: on-failure
    depends_on:
      - varnish
      - php74
      - php81
      - phpmyadmin
      - rabbitmq
      - mailcatcher
    networks:
      - internal

  varnish:
    container_name: varnish-m2
    image: varnish:7.4.1
    hostname: docker-varnish
    ports:
      - "6081:6081"
      - "6082:6082"
    user: varnish
    volumes:
      - ./volumes/etc/default/varnish:/etc/default/varnish:cached
      - ./volumes/etc/varnish/magento2.vcl:/etc/varnish/default.vcl:cached
      - ./volumes/usr/local/bin/docker-varnish-entrypoint:/usr/local/bin/docker-varnish-entrypoint:cached
      - ./volumes/var/lib/varnish:/var/lib/varnish:delegated
      - ./volumes/var/log/varnish:/var/log/varnish:delegated
    restart: on-failure
    networks:
      - internal

  php74:
    container_name: php74-m2
    build:
      context: ./images/php74
    hostname: docker-php74
    volumes:
      - root_composer:${DIST_ROOT_COMPOSER}:delegated
      - var_www:${DIST_VAR_WWW}
      - ${VOL_CONFIG_PHP74}:${DIST_CONFIG_PHP}:cached
      - ${VOL_ETC_INPUTRC}:${DIST_ETC_INPUTRC}:cached # Autocomplete functionality to the Terminal
      - ${VOL_LOG_BLACKFIRE}:${DIST_LOG_BLACKFIRE}:delegated
      - ${VOL_LOG_XDEBUG}:${DIST_LOG_XDEBUG}:delegated
      - ${VOL_ROOT_BASH_HISTORY_PHP}:${DIST_ROOT_BASH_HISTORY}:delegated
      - ${VOL_ROOT_BLACKFIRE}:${DIST_ROOT_BLACKFIRE}:delegated
      - ${VOL_SSH_AUTH_SOCK}:${DIST_SSH_AUTH_SOCK}:cached # Forward local machine SSH key to the Docker
      - ~/.ssh:/root/.ssh:cached
      - ./mounted:/home/mounted
    environment:
      COMPOSER_MEMORY_LIMIT: -1
      PHP_IDE_CONFIG: "serverName=Docker"
      SSH_AUTH_SOCK: ${VOL_SSH_AUTH_SOCK}
    working_dir: ${DIST_VAR_WWW}
    depends_on:
      - mysql
      - elasticsearch7
      - redis
      - rabbitmq
    networks:
      - internal

  php81:
    container_name: php81-m2
    build:
      context: ./images/php81
    hostname: docker-php81
    volumes:
      - root_composer:${DIST_ROOT_COMPOSER}:delegated
      - var_www:${DIST_VAR_WWW}
      - ${VOL_CONFIG_PHP81}:${DIST_CONFIG_PHP}:cached
      - ${VOL_ETC_INPUTRC}:${DIST_ETC_INPUTRC}:cached # Autocomplete functionality to the Terminal
      - ${VOL_LOG_BLACKFIRE}:${DIST_LOG_BLACKFIRE}:delegated
      - ${VOL_LOG_XDEBUG}:${DIST_LOG_XDEBUG}:delegated
      - ${VOL_ROOT_BASH_HISTORY_PHP}:${DIST_ROOT_BASH_HISTORY}:delegated
      - ${VOL_ROOT_BLACKFIRE}:${DIST_ROOT_BLACKFIRE}:delegated
      - ${VOL_SSH_AUTH_SOCK}:${DIST_SSH_AUTH_SOCK}:cached # Forward local machine SSH key to the Docker
      - ~/.ssh:/root/.ssh:cached
      - ./mounted:/home/mounted
    environment:
      COMPOSER_MEMORY_LIMIT: -1
      PHP_IDE_CONFIG: "serverName=Docker"
      SSH_AUTH_SOCK: ${VOL_SSH_AUTH_SOCK}
    working_dir: ${DIST_VAR_WWW}
    depends_on:
      - mysql
      - elasticsearch7
      - redis
      - rabbitmq
    networks:
      - internal

  mysql:
    container_name: mysql-m2
    build:
      context: ./images/mysql
    hostname: docker-mysql
    ports:
      - "3366:3306"
    volumes:
      - mysql_db:${DIST_MYSQL_DB}:delegated
      - ${VOL_ETC_INPUTRC}:${DIST_ETC_INPUTRC}:cached # Autocomplete functionality to the Terminal
      - ${VOL_ROOT_BASH_HISTORY_MYSQL}:${DIST_ROOT_BASH_HISTORY}:delegated
      - ./mounted:/home/mounted
      - ./volumes/etc/mysql/conf.d:/etc/mysql/conf.d:cached
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_USER: ${MYSQL_ROOT_USER}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    working_dir: /home/mounted
    networks:
      - internal

  phpmyadmin:
    container_name: phpmyadmin-m2
    image: phpmyadmin:5.2.1
    hostname: docker-phpmyadmin
    ports:
      - "8090:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    depends_on:
      - mysql
    networks:
      - internal

  elasticsearch7:
    container_name: elasticsearch7-m2
    build: ./images/elasticsearch7
    hostname: docker-elasticsearch7
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
      - "discovery.type=single-node"
    volumes:
      - elasticsearch7_db:/usr/share/elasticsearch/data:delegated
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9207:9200"
    user: elasticsearch
    networks:
      - internal

  redis:
    container_name: redis-m2
    image: redis:7.2.3
    hostname: docker-redis
    ports:
      - "6389:6379"
    user: redis
    volumes:
      - redis_db:/data:delegated
    networks:
      - internal

  rabbitmq:
    container_name: rabbitmq-m2
    image: rabbitmq:3.12.8-management
    hostname: docker-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    user: rabbitmq
    volumes:
      - rabbitmq_db:${DIST_RABBITMQ_DB}:delegated
    networks:
      - internal

  mailcatcher:
    container_name: mailcatcher-m2
    image: dockage/mailcatcher:0.8.2
    hostname: docker-mailcatcher
    ports:
      - "1080:1080"
      - "1025:1025"
    networks:
      - internal

  node18:
    container_name: node18-m2
    build: ./images/node18
    command: node /server.js
    hostname: docker-node18
    volumes:
      - var_www:${DIST_VAR_WWW}
      - ${VOL_ETC_INPUTRC}:${DIST_ETC_INPUTRC}:cached # Autocomplete functionality to the Terminal
      - ${VOL_ROOT_BASH_HISTORY_NODE}:${DIST_ROOT_BASH_HISTORY}:delegated
      - ./images/node18/server.js:/server.js
    working_dir: ${DIST_VAR_WWW}
    networks:
      - internal

volumes:

  elasticsearch7_db:

  mysql_db:
    driver: local
    driver_opts:
      type: none
      device: $PWD/${VOL_MYSQL_DB}
      o: bind

  rabbitmq_db:
    driver: local
    driver_opts:
      type: none
      device: $PWD/${VOL_RABBITMQ_DB}
      o: bind

  redis_db:

  root_composer:
    driver: local
    driver_opts:
      type: none
      device: $PWD/${VOL_ROOT_COMPOSER}
      o: bind
  
  var_www:
    driver: local
    driver_opts:
      type: none
      device: $PWD/${VOL_VAR_WWW}
      o: bind

networks:
  
  internal:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.220.0/28 # 192.168.220.1 - 192.168.220.14